{"version":3,"sources":["Model/AppViewModel.ts","Model/BaseViewModel.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppViewModel","view","title","reverseTitle","split","reverse","join","refreshView","this","state","setState","App","props","model","Title","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAqBeA,E,kDAfX,WAAYC,GAAY,IAAD,8BACnB,cAAMA,IAHFC,WAEe,IAKvBC,aAAe,WACX,EAAKD,MAAQ,EAAKA,MAAME,MAAM,IAAIC,UAAUC,KAAK,IACjD,EAAKC,eALL,EAAKL,MAAQ,QAFM,E,kDAWnB,OAAOM,KAAKN,U,cCbhB,WAAYD,GAAY,yBAFhBA,UAEe,EACnBO,KAAKP,KAAOA,EACZO,KAAKP,KAAKQ,MAAQD,K,0DAIlBA,KAAKP,KAAKS,SAASF,U,MCWZG,E,kDAfX,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IAHFC,WAEgB,EAEpB,EAAKA,MAAQ,IAAIb,EAAJ,gBAFO,E,qDAMpB,OACI,gCACI,6BAAKQ,KAAKK,MAAMC,QAChB,wBAAQC,QAASP,KAAKK,MAAMV,aAA5B,kC,GAZEa,IAAMC,WCWTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41ddc832.chunk.js","sourcesContent":["\nimport BaseViewModel from \"./BaseViewModel\";\n\nclass AppViewModel extends BaseViewModel{\n    private title: string;\n\n    constructor(view: any) {\n        super(view);\n        this.title = 'Title';\n    }\n\n    reverseTitle = () => {\n        this.title = this.title.split('').reverse().join('');\n        this.refreshView();\n    }\n\n    get Title(){\n        return this.title;\n    }\n}\n\nexport default AppViewModel;\n","\nclass BaseViewModel {\n    private view: any;\n\n    constructor(view: any) {\n        this.view = view;\n        this.view.state = this;\n    }\n\n    refreshView(){\n        this.view.setState(this);\n    }\n}\n\nexport default BaseViewModel\n","import React from 'react';\nimport AppViewModel from \"./Model/AppViewModel\";\n\nclass App extends React.Component {\n    private model: AppViewModel;\n\n    constructor(props: any) {\n        super(props);\n        this.model = new AppViewModel(this);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>{this.model.Title}</h1>\n                <button onClick={this.model.reverseTitle}>Reverse Title</button>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}